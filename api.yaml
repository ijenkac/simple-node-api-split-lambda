openapi: 3.0.0
info:
  title: simple-node-api
  description: A simple API for a guestbook application
  version: 2019-10-13
paths:
  /:
    post:
      operationId: CreateMessage
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/createMessage'
      # security:
      #   - write: []
      responses:
        "201":
          description: "Successfully created a message."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        "400":
          description: "Bad Request Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
    get:
      operationId: ListMessages
      parameters:
        - name: maxItems
          in: query
          required: false
          schema:
            type: number
        - name: token
          in: query
          required: false
          schema:
            type: string
      x-amazon-apigateway-integration:
        $ref: '#/components/x-amazon-apigateway-integrations/listMessages'
      # security:
      #   - read: []
      responses:
        "200":
          description: "Successfully listed messages."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageList"
        "400":
          description: "Bad Request Exception"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
components:
  x-amazon-apigateway-integrations:
    createMessage:
      type: aws_proxy
      httpMethod: POST
      uri:
        Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostMessageLambda.Alias}/invocations"
      passthroughBehavior: when_no_templates
      payloadFormatVersion: 2.0
    listMessages:
      type: aws_proxy
      httpMethod: POST
      uri:
        Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ListMessagesLambda.Alias}/invocations"
      passthroughBehaviour: when_no_templates
      payloadFormatVersion: 2.0
    deleteMessage:
      type: aws_proxy
      httpMethod: POST
      uri:
        Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteMessageLambda.Alias}/invocations"
      passthroughBehaviour: when_no_templates
      payloadFormatVersion: 2.0
  schemas:
    Message:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
        author:
          type: string
        time:
          type: number
    MessageList:
      type: object
      properties:
        items: 
          type: array
          items:
            $ref: "#/components/schemas/Message"
        nextToken:
          type: string
          required:
            - items
    BadRequestException:
      type: object
      properties:
        message:
          type: string
        errorCode:
          type: string
    InternalServerErrorException:
      type: object
      properties:
        message:
          type: string
        errorCode:
          type: string
# securitySchemes:
#   read:
#     type: oauth2
#     scopes:
#       "read:messages": "read messages from a guestbook"
#     x-amazon-apigateway-authorizier:
#       type: jwt
#       jwtConfiguration:
#         issuer:
#           Fn::Sub: "${Issuer}"
#         audience: 
#           - Fn::Sub: "${Audience}"
#         identitySource: "$request.header.Authorization"
#   write:
#     type: oauth2
#     scopes:
#       "write:messages": "write messages to a guestbook"
#     x-amazon-apigateway-authorizier:
#       type: jwt
#       jwtConfiguration:
#         issuer:
#           Fn::Sub: "${Issuer}"
#         audience: 
#           - Fn::Sub: "${Audience}"
#         identitySource: "$request.header.Authorization"